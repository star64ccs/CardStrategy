# ==================== 多階段構建 - 生產環境 ====================

# 第一階段：依賴安裝
FROM node:18-alpine AS deps
WORKDIR /app

# 安裝系統依賴
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    postgresql-client \
    redis \
    && rm -rf /var/cache/apk/*

# 複製 package 文件
COPY package*.json ./

# 安裝依賴
RUN npm ci --only=production && npm cache clean --force

# 第二階段：構建階段
FROM node:18-alpine AS builder
WORKDIR /app

# 複製依賴
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# 運行構建腳本（如果有）
RUN npm run build || true

# 第三階段：生產運行階段
FROM node:18-alpine AS production
WORKDIR /app

# 安裝生產環境必要的系統工具
RUN apk add --no-cache \
    postgresql-client \
    redis \
    curl \
    && rm -rf /var/cache/apk/*

# 創建非 root 用戶
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# 複製依賴和應用代碼
COPY --from=deps /app/node_modules ./node_modules
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/src ./src
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/healthcheck.js ./

# 創建必要的目錄並設置權限
RUN mkdir -p /app/uploads /app/logs /app/models /app/exports /app/backups && \
    chown -R nodejs:nodejs /app

# 切換到非 root 用戶
USER nodejs

# 暴露端口
EXPOSE 3000

# 健康檢查
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# 啟動命令
CMD ["npm", "start"]
